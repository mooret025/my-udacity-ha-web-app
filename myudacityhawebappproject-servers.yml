Description: >
  Tyrone Moore / Udacity 2019

Parameters:
# whatever you consider a changing value, put it as a parameter instead of hard-coding it into your script
  EnvironmentName:
    Description: An environment name that will be prefixed to resources
    Type: String
        
Resources:

  LBSecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: Allow all http traffic to load balancer
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} LB Security Group
      VpcId: !ImportValue UdacityHaWebAppProject-VPCID
  
  WebServerSecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: Allow all http traffic to web servers
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 0
          ToPort: 65535
          CidrIp: 0.0.0.0/0
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Web Security Group
      VpcId: !ImportValue UdacityHaWebAppProject-VPCID

  ProfileWithRolesForOurApp:
    Type: AWS::IAM::InstanceProfile
    Properties: 
      Roles:
        - UdacityS3ReadOnlyEC2  
  
  WebServerGroup:
    Type: "AWS::AutoScaling::AutoScalingGroup"
    Properties:
      LaunchConfigurationName: !Ref LaunchConfiguration
      MaxSize: '4'
      MinSize: '4'
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} - Instances
          PropagateAtLaunch: "true"
      VPCZoneIdentifier: 
      - Fn::ImportValue:
          !Sub "${EnvironmentName}-PRIV-NETS"
  
  LaunchConfiguration:
    Type: "AWS::AutoScaling::LaunchConfiguration"
    Properties:
      BlockDeviceMappings:
      - DeviceName: "/dev/sdk"
        Ebs:
          VolumeSize: '10'
      IamInstanceProfile: !Ref ProfileWithRolesForOurApp
      ImageId: ami-06d51e91cea0dac8d
      InstanceType: t2.micro # change to t2.medium to build to spec
      KeyName: udacity_key
      SecurityGroups:
        - !Ref WebServerSecurityGroup
      UserData: 
        Fn::Base64: !Sub |
          #!/bin/bash
          apt-get update -y
          apt-get install unzip awscli -y
          apt-get install apache2 -y
          systemctl start apache2.service
          cd /var/www/html
          aws s3 cp s3://udacity-demo-1/udacity.zip .
          unzip -o udacity.zip

  ApplicationLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      SecurityGroups: !Ref LBSecurityGroup
      Subnets:
      - Fn::ImportValue: !Sub "${EnvironmentName}-PUB1-SN"
      - Fn::ImportValue: !Sub "${EnvironmentName}-PUB2-SN"
      Tags: 
        - Key: Name
          Value: !Sub ${EnvironmentName} ALB
      Type: application
# Outputs:
#Bonus points for useful outputs!